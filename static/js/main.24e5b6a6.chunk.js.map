{"version":3,"sources":["index.js"],"names":["Circle","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","style","height","this","props","diameter","width","background","color","border","borderColor","text","React","Component","Form","_this","Object","_Users_Jo_Jo_Desktop_bye_databases_project_yenergi_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_Users_Jo_Jo_Desktop_bye_databases_project_yenergi_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_Jo_Jo_Desktop_bye_databases_project_yenergi_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","handleDateChange","bind","_Users_Jo_Jo_Desktop_bye_databases_project_yenergi_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__","handleCapChange","handleFilterChange","event","onDateChange","parseInt","target","value","onCapChange","onFilterChange","currDate","month","year","type","min","max","defaultValue","onChange","list","id","temp","name","checked","cap","disabled","displayFilter","Map","google_map_react__WEBPACK_IMPORTED_MODULE_8___default","bootstrapURLKeys","key","defaultCenter","center","defaultZoom","zoom","draggable","circles","App","_this2","state","buildings","colleges","students","temps","index","nlat","slat","axios","get","then","res","setState","data","handleZoomChange","usage","Math","log","length","initMonth","initYear","floor","_this3","map","bldg","lat","lng","description","count","normalize","filter","newFilter","bounds","ne","se","getDate","getTemp","getUsage","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24e5b6a6.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GoogleMapReact from 'google-map-react';\nimport axios from 'axios';\nimport './index.css';\n\nclass Circle extends React.Component {\n  render() {\n    return (\n      <div className=\"circle tooltip\" style={{height: this.props.diameter, width: this.props.diameter, background: this.props.color, border: \"1px solid \" + this.props.borderColor}}>\n        <span className=\"tooltiptext\">{this.props.text}</span>\n      </div>\n    );\n  }\n}\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleCapChange = this.handleCapChange.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n  }\n\n  handleDateChange(event) {\n    this.props.onDateChange(parseInt(event.target.value));\n  }\n\n  handleCapChange(event) {\n    this.props.onCapChange(parseInt(event.target.value));\n  }\n\n  handleFilterChange(event) {\n    this.props.onFilterChange(parseInt(event.target.value));\n  }\n\n  render() {\n    return (\n      <div className=\"options\">\n        <h1>Yenergi</h1>\n        <div>\n          Explore energy consumption at Yale University. Use the following filters to visualize data across many different dimensions.\n        </div>\n        <h3>Options:</h3>\n        <div className=\"date\">\n          <div>{this.props.currDate.month} {this.props.currDate.year}</div>\n          <input type=\"range\" min={0} max={181} defaultValue={181} onChange={this.handleDateChange} list=\"steplist\"/>\n          <datalist id=\"steplist\">\n            <option>0</option>\n            <option>60</option>\n            <option>120</option>\n            <option>180</option>\n          </datalist>\n        </div>\n        <div className=\"temp\">\n          Avg. temp (F): {this.props.temp}\n        </div>\n        <div className=\"cap\">\n          <div>Max energy usage to display:</div>\n          <input type=\"radio\" name=\"energy-cap\" value={100000} checked={this.props.cap === 100000} onChange={this.handleCapChange} disabled={this.props.displayFilter === 2} />100,000<br/>\n          <input type=\"radio\" name=\"energy-cap\" value={10000} checked={this.props.cap === 10000} onChange={this.handleCapChange} disabled={this.props.displayFilter === 2} />10,000<br/>\n          <input type=\"radio\" name=\"energy-cap\" value={1000} checked={this.props.cap === 1000} onChange={this.handleCapChange} disabled={this.props.displayFilter === 2} />1,000<br/>\n          <input type=\"radio\" name=\"energy-cap\" value={100} checked={this.props.cap === 100} onChange={this.handleCapChange} disabled={this.props.displayFilter === 2} />100<br/>\n          <input type=\"radio\" name=\"energy-cap\" value={10} checked={this.props.cap === 10} onChange={this.handleCapChange} disabled={this.props.displayFilter === 2} />10<br/>\n          <input type=\"radio\" name=\"energy-cap\" value={99999999} checked={this.props.cap === 99999999} onChange={this.handleCapChange} disabled={this.props.displayFilter === 2} />No cap\n        </div><br/>\n        <div className=\"studets-or-energy\">\n          <input type=\"radio\" name=\"display-filter\" value={0} checked={this.props.displayFilter === 0} onChange={this.handleFilterChange} />All buildings<br/>\n          <input type=\"radio\" name=\"display-filter\" value={1} checked={this.props.displayFilter === 1} onChange={this.handleFilterChange} />Only colleges<br/><br/>\n          <div>Display number of students per dormitory:</div>\n          <input type=\"radio\" name=\"display-filter\" value={2} checked={this.props.displayFilter === 2} onChange={this.handleFilterChange} />Students<br/>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Map extends React.Component {\n  render() {\n    return (\n      <div style={{ height: '92vh', width: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: 'AIzaSyAfvrqHTxlg8C0nxideXF6wQS6ZhKTAEKc' }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          draggable={true}\n          onChange={this.props.onChange}\n        >\n        {this.props.circles}\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  static defaultProps = {\n    center: {\n      lat: 41.3089,\n      lng: 287.0696,\n    },\n    zoom: 14.5,\n    initMonth: 6,\n    initYear: 2002,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      buildings: [],\n      colleges: [],\n      students: [],\n      temps: [],\n      index: 180,\n      cap: 99999999,\n      nlat: 41.3187,\n      slat: 41.2991,\n      displayFilter: 0,\n    };\n    // get building usage data\n    axios.get(\"http://127.0.0.1:5000/energyovertime\")\n      .then(res => {\n        this.setState({\n          buildings: res.data,\n        });\n      });\n    // get weather data\n    axios.get(\"http://127.0.0.1:5000/weather\")\n      .then(res => {\n        this.setState({\n          temps: res.data,\n        });\n      });\n    // get energy for only residential colleges\n    axios.get(\"http://127.0.0.1:5000/rcenergy\")\n      .then(res => {\n        this.setState({\n          colleges: res.data,\n        });\n      });\n    // get number of students in each res college\n    axios.get(\"http://127.0.0.1:5000/students\")\n      .then(res => {\n        this.setState({\n          students: res.data,\n        });\n      });\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.handleCapChange = this.handleCapChange.bind(this);\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n    this.handleZoomChange = this.handleZoomChange.bind(this);\n  }\n \n  normalize(usage) {\n    // return 25;\n    if (usage < 3) {\n      usage = 3;\n    }\n    return Math.log(usage) * 0.125 / (this.state.nlat - this.state.slat);\n  }\n\n  getTemp() {\n    if (this.state.temps.length > 0 && this.state.temps[this.state.index]) {\n      return this.state.temps[this.state.index];\n    }\n    return \"Unavailable\";\n  }\n\n  getDate() {\n    const months = [\n        'January', 'February', 'March', 'April', 'May',\n        'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n      ];\n    return {\n      month: months[(this.props.initMonth + this.state.index) % 12],\n      year: this.props.initYear + Math.floor((this.props.initMonth + this.state.index) / 12)\n    };\n  }\n\n  // returns the circles for this specific date\n  getUsage() {\n    if (this.state.displayFilter === 2) {    // get just student counts\n      return this.state.students.map((bldg) => {\n        return (\n            <Circle key={parseInt(bldg.id)} lat={bldg.lat} lng={bldg.lng} text={bldg.description} diameter={bldg.count * (0.001 / (this.state.nlat - this.state.slat))} color={\"rgba(0, 255, 0, 0.25)\"} borderColor={\"green\"} />\n          );\n      });\n    } else if (this.state.displayFilter === 1) {   // get only college data\n      return this.state.colleges.map((bldg) => {\n        return (\n            <Circle key={bldg.id} lat={bldg.lat} lng={bldg.lng} text={bldg.description} diameter={this.normalize(bldg.usage[this.state.index])} color={\"rgba(0, 0, 255, 0.25)\"} borderColor={\"blue\"} />\n          );\n      });\n    } else {    // get all buildings\n      const buildings = this.state.buildings.filter((bldg) => {\n          return bldg.usage[this.state.index] < this.state.cap;\n        });\n\n      return buildings.map((bldg) => {\n        return (\n            <Circle key={bldg.id} lat={bldg.lat} lng={bldg.lng} text={bldg.description} diameter={this.normalize(bldg.usage[this.state.index])} color={\"rgba(255, 0, 0, 0.25)\"} borderColor={\"red\"} />\n          );\n      });\n    }\n  }\n\n  // handles date change from form\n  handleDateChange(index) {\n    if (index !== this.state.index) {\n      this.setState({\n        index: index,\n      });\n    }\n  }\n\n  // handle change in energy cap\n  handleCapChange(cap) {\n    if (cap !== this.state.cap) {\n      this.setState({\n        cap: cap,\n      });\n    }\n  }\n\n  // handle filter change\n  handleFilterChange(newFilter) {\n    if (newFilter !== this.state.displayFilter) {\n      this.setState({\n        displayFilter: newFilter,\n      })\n    }\n  }\n\n  handleZoomChange(event) {\n    if (this.state && (event.bounds.ne.lat !== this.state.nlat || event.bounds.se.lat !== this.state.slat)) {\n      this.setState({\n        nlat: event.bounds.ne.lat,\n        slat: event.bounds.se.lat,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Form onDateChange={this.handleDateChange} onCapChange={this.handleCapChange} onFilterChange={this.handleFilterChange} cap={this.state.cap} currDate={this.getDate()} temp={this.getTemp()} displayFilter={this.state.displayFilter} />\n        <div className=\"map\">\n          <Map center={this.props.center} zoom={this.props.zoom} circles={this.getUsage()} onChange={this.handleZoomChange}/>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}